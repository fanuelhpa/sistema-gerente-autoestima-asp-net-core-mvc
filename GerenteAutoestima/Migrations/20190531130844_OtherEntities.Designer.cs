// <auto-generated />
using System;
using GerenteAutoestima.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GerenteAutoestima.Migrations
{
    [DbContext(typeof(GerenteAutoestimaContext))]
    [Migration("20190531130844_OtherEntities")]
    partial class OtherEntities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GerenteAutoestima.Models.AgendaServico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataHora");

                    b.Property<int?>("FuncionarioId");

                    b.Property<int?>("ServicoId");

                    b.Property<int>("StatusAgenda");

                    b.Property<int?>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("ServicoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("AgendaServico");
                });

            modelBuilder.Entity("GerenteAutoestima.Models.CategoriaProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("CategoriaProduto");
                });

            modelBuilder.Entity("GerenteAutoestima.Models.CategoriaServico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("CategoriaServico");
                });

            modelBuilder.Entity("GerenteAutoestima.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("TipoFuncionario");

                    b.Property<int?>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("GerenteAutoestima.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CategoriaProdutoId");

                    b.Property<string>("Nome");

                    b.Property<double>("Preco");

                    b.Property<int>("QuantidadeDisponivel");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaProdutoId");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("GerenteAutoestima.Models.Servico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CategoriaServicoId");

                    b.Property<string>("Descricao");

                    b.Property<string>("Nome");

                    b.Property<double>("Preco");

                    b.Property<DateTime>("TempoExecucao");

                    b.Property<int>("TipoServico");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaServicoId");

                    b.ToTable("Servico");
                });

            modelBuilder.Entity("GerenteAutoestima.Models.Telefone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Numero");

                    b.Property<int?>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Telefone");
                });

            modelBuilder.Entity("GerenteAutoestima.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Nome");

                    b.Property<string>("Senha");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("GerenteAutoestima.Models.AgendaServico", b =>
                {
                    b.HasOne("GerenteAutoestima.Models.Funcionario", "Funcionario")
                        .WithMany("AgendasServicos")
                        .HasForeignKey("FuncionarioId");

                    b.HasOne("GerenteAutoestima.Models.Servico", "Servico")
                        .WithMany("AgendasServicos")
                        .HasForeignKey("ServicoId");

                    b.HasOne("GerenteAutoestima.Models.Usuario", "Usuario")
                        .WithMany("AgendasServicos")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("GerenteAutoestima.Models.Funcionario", b =>
                {
                    b.HasOne("GerenteAutoestima.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("GerenteAutoestima.Models.Produto", b =>
                {
                    b.HasOne("GerenteAutoestima.Models.CategoriaProduto", "CategoriaProduto")
                        .WithMany("produtos")
                        .HasForeignKey("CategoriaProdutoId");
                });

            modelBuilder.Entity("GerenteAutoestima.Models.Servico", b =>
                {
                    b.HasOne("GerenteAutoestima.Models.CategoriaServico", "CategoriaServico")
                        .WithMany("Servicos")
                        .HasForeignKey("CategoriaServicoId");
                });

            modelBuilder.Entity("GerenteAutoestima.Models.Telefone", b =>
                {
                    b.HasOne("GerenteAutoestima.Models.Usuario")
                        .WithMany("Telefones")
                        .HasForeignKey("UsuarioId");
                });
#pragma warning restore 612, 618
        }
    }
}
